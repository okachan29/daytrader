#18.12.2020~
import sys
from random import randint 
import pygame
from pygame.locals import QUIT,Rect,KEYDOWN,K_SPACE,MOUSEBUTTONDOWN,MOUSEBUTTONUP

pygame.init()
pygame.key.set_repeat(5,5)
SURFACE=pygame.display.set_mode((800,600))
FPSCLOCK=pygame.time.Clock()
sysfont=pygame.font.SysFont(None,30)#残高と現在値の文字
sysfont2=pygame.font.SysFont(None,20)#目盛りの文字
sysfont3=pygame.font.SysFont(None,70)#企業名の文字
stock=100
max=10#画面内最大個数（リストの要素数
account=1000000
buybox=Rect(400,500,200,100)
sellbox=Rect(600,500,200,100)
colors=[(100,100,100),(200,200,200),(200,50,50),(50,50,200),(255,255,255),(0,0,0),(0,255,50),(50,50,50)]#灰、枠線灰、買い赤、売り赤、白、黒、緑
boom=True
recession=False
bubble=False
tradingprice=0

def draw(current,account,bought,sold):#緑線以外の描画の関数
    global tradingprice
    SURFACE.fill(colors[5])
    gap=current%100
    upperline=current-gap+300#真ん中の目盛りの数値に300を足した一番上の目盛りの数値
    for i in range(0,600,100):
        if upperline-i>=0:
            pygame.draw.line(SURFACE,colors[7],(0,i+gap),(800,i+gap),1)
            SURFACE.blit(sysfont2.render("{}".format(upperline-i),True,colors[4],colors[5]),(10,i+gap-5))# -5は補正
    SURFACE.blit(sysfont.render("{}".format(current),True,colors[6],colors[5]),(540,310))
    SURFACE.blit(sysfont2.render("[ stock:100 ]",True,colors[4],colors[5]),(270,70))
    SURFACE.blit(sysfont.render(" Account: {} ".format(account),True,colors[4],colors[5]),(580,65))
    SURFACE.blit(sysfont3.render("FTC Inc.",True,colors[4],colors[5]),(70,40))
    if bought or sold:
        if bought:
            Return=current*stock-tradingprice
        elif sold:
            Return=-1*current*stock+tradingprice
        if Return>0:
            SURFACE.blit(sysfont.render("+{}".format(Return),True,colors[2],colors[5]),(675,180))
        elif Return<0:
            SURFACE.blit(sysfont.render("{}".format(Return),True,colors[3],colors[5]),(675,180))

def drawchart(points):#緑線の描画関数
    global max
    for j in range (max):
        if j != max-1:
            point1=(points[j].left,600-points[j].top)
            point2=(points[j+1].left,600-points[j+1].top)
            pygame.draw.line(SURFACE,colors[6],point1,point2)

def drawtradebox(bought,sold):#右下のtradeエリアの描画
    pygame.draw.rect(SURFACE,colors[2],buybox)
    pygame.draw.rect(SURFACE,colors[3],sellbox)
    if bought:
        pygame.draw.rect(SURFACE,colors[0],buybox)
    elif sold:
        pygame.draw.rect(SURFACE,colors[0],sellbox)
        
    pygame.draw.rect(SURFACE,colors[1],buybox,3)#枠線
    pygame.draw.rect(SURFACE,colors[1],sellbox,3)#枠線
    SURFACE.blit(sysfont.render("BUY",True,(colors[1])),(buybox.left+buybox.width/2-45/2,buybox.top+buybox.height/2-15/2))
    SURFACE.blit(sysfont.render("SELL",True,(colors[1])),(sellbox.left+sellbox.width/2-45/2,sellbox.top+sellbox.height/2-15/2))
    
def buy(current):
    global account,boom,recession,tradingprice
    if account>current:
        if randint(1,5)==2:
            boom=True
            recession=False
        else:
            boom=False
            recession=True
        account-=current*stock
        tradingprice=current*stock

def sell(current):
    global account,boom,recession,tradingprice
    if account>current:
        if randint(1,5)==2:
            recession=True
            boom=False
        else:
            recession=False
            boom=True
        tradingprice=current*stock
        account+=current*stock

def drawgameover():
    SURFACE.blit(sysfont3.render("BANKRUPTCY",True,colors[7],colors[5]),(230,260))


def main():
    global account,boom,recession,bubble
    points=[]
    game_over=False
    next=None
    mousepos=[]
    cg=0#current gap
    gs=0 #gap sum
    price=10000
    bought=False
    sold=False
    framecount=0
    turn=0
    changedframe=0
    for point in range(max):#maxはその瞬間のグラフの点の個数
        points.append(Rect(point*60,randint(1300,1500),0,0))
    cg=points[-1].top-300
    points=[x.move(0,-cg) for x in points]
    gs=cg
    current=gs+300
    start=current

    while True:
        framecount+=1
        for event in pygame.event.get():
            if event.type==QUIT:
                pygame.quit()
                sys.quit()
            if  event.type==MOUSEBUTTONDOWN:
                mousepos.append(event.pos)
                if 500<mousepos[0][1]:
                    if buybox.left<mousepos[0][0]<sellbox.left and not bought:
                        if sold:
                            sold=False
                            account-=stock*current
                            boom=True
                            recession=False
                        else:
                            bought=True
                            buy(current)
                            turn=randint(5,20)
                            changedframe=framecount//13
                    elif sellbox.left<mousepos[0][0]<sellbox.left+sellbox.width and not sold:
                        if bought:
                            bought=False
                            account+=stock*current
                            boom=True
                            recession=False
                        else:
                            sold=True
                            sell(current)
                            turn=randint(3,9)
                            changedframe=framecount//13
            if event.type==MOUSEBUTTONUP:
                mousepos.clear()
                  
        if not game_over and framecount%13==0:
            if framecount//13==turn+changedframe:#しばらく（turn回）経ったら、確率次第で景気が逆転するif文
                if bubble:
                    bubble=False
                    boom=True
                    recession=False
                if randint(1,2)==2:
                    boom = not boom
                    recession = not recession
                    turn=randint(1,10)
                if randint(1,20)==7:#5%の確率で確変モードbubble
                    bubble=True
                    boom=False
                    recession=False
                    turn=randint(12,20)
                changedframe=framecount//13
            if boom:
                if randint(1,5)==1: #1/5の確率でしか下落しない
                    next=randint(current-20,current)
                else:
                    next=randint(current,current+80)
            elif recession:
                if randint(1,5)==1: #1/5の確率でしか上昇しない
                    next=randint(current,current+20)
                else:
                    next=randint(current-80,current)
            elif bubble:
                if randint(1,5)==1: #1/5の確率でしか下落しない
                    next=randint(current-20,current)
                else:
                    next=randint(current,current+800)
            next-=gs
            points.append(Rect(600,next,0,0))
            del points[0]
            cg=points[-1].top-300
            gs+=cg
            points=[x.move(-600/max,-cg) for x in points]  
            current=gs+300
        if current<=0:
            game_over=True
        else:
            
            draw(current,account,bought,sold)
            drawtradebox(bought,sold)
            drawchart(points)
        pygame.display.update()
        FPSCLOCK.tick(10)

if __name__=='__main__':
    main()


#ニュース？良いニュースがきたら、確変boom悪いなら確変recession